<customControl:BaseWindow x:Class="Classroom.View.IntoClassView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:customControl="clr-namespace:Common.CustomControl;assembly=Common"
                          xmlns:behaviors="clr-namespace:Common.Behavior;assembly=Common"
                          FocusVisualStyle="{x:Null}"
                          >

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}"></i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <i:Interaction.Behaviors>
        <behaviors:KeyDownBehavior KeyDownCommand="{Binding KeyDownCommand}"></behaviors:KeyDownBehavior>
    </i:Interaction.Behaviors>
    <customControl:BaseWindow.Resources>
        <RoutedUICommand x:Key="SwitchCameraKey" Text="SwitchCamera"></RoutedUICommand>
    </customControl:BaseWindow.Resources>
    

    <FrameworkElement.InputBindings>
        <KeyBinding Key="Q" Modifiers="Alt" Command="{StaticResource SwitchCameraKey}"></KeyBinding>
        <KeyBinding Key="K" Modifiers="Alt" Command="{Binding SetDoubleScreenOnOrOffCommand}"></KeyBinding>
    </FrameworkElement.InputBindings>
    <FrameworkElement.CommandBindings>
        <CommandBinding Command="{StaticResource SwitchCameraKey}" Executed="SwitchCamera"></CommandBinding>
        <!--<CommandBinding Command="{StaticResource SetDoubleScreenKey}" Executed="SetDoubleScreenOnOrOff"></CommandBinding>-->
    </FrameworkElement.CommandBindings>

    <Grid x:Name="Grid" FocusVisualStyle="{x:Null}" Focusable="False">
            
                <Popup x:Name="TopPopup" Placement="Top"
               PlacementTarget="{Binding ElementName=Grid}" 
               Width="{Binding ElementName=Grid,Path=ActualWidth}"
               IsOpen="{Binding ShowTopBottomMenus}"
                Height="110"
                       VerticalOffset="110"              
               >
                    <DockPanel Background="#EFF0EA">
                        <TextBlock Text="{Binding CourseNo}" FontSize="38" VerticalAlignment="Center" Margin="10"></TextBlock>
                        <Viewbox HorizontalAlignment="Right">
                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">

                        <Grid Visibility="{Binding MainSpeakerFunctionalityVisibility}">
                            <customControl:TriggerButton x:Name="PushLiveTriggerButton" DataContext="{Binding PushLiveTriggerItem}" VerticalAlignment="Center" Margin="10">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="GotFocus">
                                        <i:InvokeCommandAction Command="{Binding UpButtonGotFocusCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorLevel=1,AncestorType=ToggleButton}}"></i:InvokeCommandAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                            </customControl:TriggerButton>
                        </Grid>
                        <customControl:TriggerButton x:Name="LocalRecordTriggerButton" DataContext="{Binding LocalRecordTriggerItem}" VerticalAlignment="Center" Margin="10">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding UpButtonGotFocusCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorLevel=1,AncestorType=ToggleButton}}"></i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </customControl:TriggerButton>
                        <customControl:ClassModeControl  DataContext="{Binding ClassModeStatus}" VerticalAlignment="Center" Margin="10"></customControl:ClassModeControl>
                        <Button x:Name="ExitButton" Style="{StaticResource ExitClassButton}" Content="退出" Command="{Binding GotoExitMeetingCommand}" VerticalAlignment="Center" Width="90" Height="50" BorderThickness="1" FontSize="30" Margin="10">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding UpButtonGotFocusCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorLevel=1,AncestorType=Button}}"></i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </Button>
                    </StackPanel>
                </Viewbox>
                    </DockPanel>
                </Popup>

        

        <Popup x:Name="BottomPopup" 
               IsOpen="{Binding ShowTopBottomMenus}"
               Placement="Bottom"
               PlacementTarget="{Binding ElementName=Grid}"
               Height="110"
               VerticalOffset="-110"
               Width="{Binding ElementName=Grid,Path=ActualWidth}"
               >
                <Grid Background="{StaticResource ThemeBrush}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="30"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <ToggleButton Style="{StaticResource IntoClassToggleButton}" Grid.Column="1" x:Name="ClassModeToggleButton" Width="{Binding CalculatedToggleButtonWidth}" Command="{Binding GotoClassModeCommand}" IsChecked="{Binding ClassModeChecked}" Content="课堂管理" Visibility="{Binding MainSpeakerFunctionalityVisibility}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="GotFocus">
                            <i:InvokeCommandAction Command="{Binding DownButtonGotFocusCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorLevel=1,AncestorType=ToggleButton}}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ToggleButton>
                    <ToggleButton Style="{StaticResource StartStopSpeakToggleButton}" Grid.Column="2" x:Name="StartStopSpeakToggleButton"  Width="{Binding CalculatedToggleButtonWidth}"  Command="{Binding StartStopSpeakCommand}" Content="{Binding SpeakingStatus}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="GotFocus">
                            <i:InvokeCommandAction Command="{Binding DownButtonGotFocusCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorLevel=1,AncestorType=ToggleButton}}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                </ToggleButton>
                    <ToggleButton  Style="{StaticResource IntoClassToggleButton}" Grid.Column="3" x:Name="PictureModeToggleButton" Width="{Binding CalculatedToggleButtonWidth}"   Command="{Binding GotoPictureModeCommand}" IsChecked="{Binding PictureModeChecked}" Content="画面模式">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="GotFocus">
                            <i:InvokeCommandAction Command="{Binding DownButtonGotFocusCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorLevel=1,AncestorType=ToggleButton}}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                </ToggleButton>
                    <ToggleButton Style="{StaticResource IntoClassToggleButton}"  Grid.Column="4" x:Name="InvitationToggleButton" Width="{Binding CalculatedToggleButtonWidth}"   Command="{Binding GotoInvitationCommand}" IsChecked="{Binding InvitationChecked}" Content="邀请听课">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="GotFocus">
                            <i:InvokeCommandAction Command="{Binding DownButtonGotFocusCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorLevel=1,AncestorType=ToggleButton}}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                </ToggleButton>
                    <ToggleButton Style="{StaticResource IntoClassToggleButton}"  Grid.Column="5" x:Name="AttendeesToggleButton"  Width="{Binding CalculatedToggleButtonWidth}"  Command="{Binding GotoAttendeesCommand}" IsChecked="{Binding AttendeesChecked}" Content="教室列表">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="GotFocus">
                            <i:InvokeCommandAction Command="{Binding DownButtonGotFocusCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorLevel=1,AncestorType=ToggleButton}}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                </ToggleButton>
                </Grid>
            </Popup>
        </Grid>
</customControl:BaseWindow>

